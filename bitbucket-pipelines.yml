clone:
  depth: full

definitions:
  caches:
    sonar: ~/.sonar/cache

image: 
  name: 142401413602.dkr.ecr.sa-east-1.amazonaws.com/ecr-image-default-maven
  aws:
    oidc-role: arn:aws:iam::142401413602:role/role-bitbucket-pipelines

steptypes:
  - aws_authentication: &aws_authentication |- 
      unset AWS_ACCESS_KEY_ID && unset AWS_SECRET_KEY
      aws sts assume-role-with-web-identity --role-arn arn:aws:iam::142401413602:role/role-bitbucket-pipelines --role-session-name bitbucket-pipeline --web-identity-token $BITBUCKET_STEP_OIDC_TOKEN --duration-seconds 1000 > /tmp/credentials
      export AWS_ACCESS_KEY_ID=$(cat /tmp/credentials | jq -r '.Credentials.AccessKeyId') && export AWS_SECRET_ACCESS_KEY=$(cat /tmp/credentials | jq -r '.Credentials.SecretAccessKey') && export AWS_SESSION_TOKEN=$(cat /tmp/credentials | jq -r '.Credentials.SessionToken')

  - build: &build |- 
      curl -sSL https://will-devops-templates.s3.sa-east-1.amazonaws.com/build-java-spring.sh | sh

  - test: &test
      name: Test and Analyze on SonarCloud
      oidc: true
      max-time: 10
      artifacts:
        - 'target/*.jar'
      caches:
        - maven
        - sonar
      script:
        - *aws_authentication
        - mvn -B verify sonar:sonar -Dsonar.login=${SONAR_TOKEN}

pipelines:
  branches:
    '{feature/*,bugfix/*,release/*}':
      - step: *test   

    '{master,main,staging,develop}':
      - step: *test

      - step:
          name: 'Build userdept'
          script:
            - export APP_NAME=userdept
            - export SKIP_DEPLOYMENT_KUBERNETES=true
            - *aws_authentication
            - *build
          services:
            - docker
          oidc: true
          max-time: 10
 
  pull-requests:
    '**':
      - step: *test
